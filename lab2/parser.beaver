%class "LangParser";
%package "lang.ast";

%embed {:
	static public class SyntaxError extends RuntimeException { public SyntaxError(String msg) {super(msg);}}
	// Disable syntax error recovery
	protected void recoverFromError(Symbol token, TokenStream in) {
		throw new SyntaxError("Cannot recover from the syntax error");
	}
:};

%terminals ID, LPAR, RPAR, LBRACKET, RBRACKET, INT;

%typeof program = "Program";
%typeof function = "Function";
%typeof functionList = "List";
%typeof idDecl = "IdDecl";
%typeof assign = "Assignment";


%goal program;

program = functionList.list {: return new Program(list); :} ;
idDecl = ID.id {: return new IdDecl(id); :} ;
functionList =
    function.f {: return new List().add(f); :}
    | functionList.list function.f {: return list.add(f); :} ;

function = INT idDecl.id LPAR RPAR LBRACKET RBRACKET {: return new Function(id); :} ;


numeral = NUMERAL.num {: return new Numeral(num); :} ;

idUse = ID.id {: return new IdUse(id); :} ;
